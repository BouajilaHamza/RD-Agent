hypothesis_and_feedback: |-
  {% for hypothesis, experiment, feedback in trace.hist[-10:] %}
  Hypothesis {{ loop.index }}: {{ hypothesis }}
  Observation on the result with the hypothesis: {{ feedback.observations }}
  Feedback on the original hypothesis:  {{ feedback.hypothesis_evaluation }}
  Did changing to this hypothesis work? (focus on the change):  {{ feedback.decision }}
  {% endfor %}

hypothesis_specification: |-
  Hypothesis should avoid being too general and vague, and should be specific and actionable. For example, hypothesis like 'tune a model' is too general, while hypothesis like 'increase the learning rate to 0.1 of the lightgbm model will improve the performance' is specific and actionable.
  Your hypothesis should based on current SOTA solution. The user will conduct experiments based on the SOTA solution to test whether your hypothesis is right on this specific competition.
  {{ sota_solution}}

output_format:
  hypothesis: |-
    The output should follow JSON format. The schema is as follows:
    {
      "component": "If "hypothesis_specification" provides the component you need to take, please follow "hypothesis_specification" to choose the component. Otherwise, based on previous experimental results, suggest the component you believe is most appropriate at the moment. It should be one of ["DataLoadSpec", "FeatureEng", "Model", "Ensemble", "Workflow"]",
      "hypothesis": "The new hypothesis generated based on the information provided.",
      "reason": "The reason why you generate this hypothesis. It should be comprehensive and logical. It should cover the other keys below and extend them.",
      "concise_reason": "Two-line summary. First line focuses on a concise justification for the change. Second line generalizes a knowledge statement.",
      "concise_observation": "One line summary. It focuses on the observation of the given scenario, data characteristics, or previous experiences (failures & succeses).",
      "concise_justification": "One line summary. Justify the hypothesis based on theoretical principles or initial assumptions.",
      "concise_knowledge": "One line summary. Transferable knowledge based on theoretical principles. Use conditional grammar. eg. "If...., ..; When..., .; and etc" Make sure that you state things clearly without ambiguity. Eg. avoid saying "previous hypothesis", because one wouldn't know what that is."
    }
  data_loader: |-

  feature: |-
    According to the hypothesis, please help user design one or more feature engineering tasks.
    The output should follow JSON format. The schema is as follows:
    {
        "factor or group name 1": {
            "description": "description of factor or group name 1",
            "formulation": "latex formulation of factor or group name 1",
            "variables": {
                "variable or function name 1": "description of variable or function 1",
                "variable or function name 2": "description of variable or function 2"
            }
        },
        "factor or group name 2": {
            "description": "description of factor or group name 2",
            "formulation": "latex formulation of factor or group name 2",
            "variables": {
                "variable or function name 1": "description of variable or function 1",
                "variable or function name 2": "description of variable or function 2"
            }
        }
        # Don't add ellipsis (...) or any filler text that might cause JSON parsing errors here!
    }
  model: |-
    According to the hypothesis, please help user design one model task.
    We only build one model from four main model types: ["XGBoost", "RandomForest", "LightGBM", "NN"].
    The output should follow JSON format. The schema is as follows: 
    {
        "model_name": "model_name",
        "description": "A detailed description of the model",
        "architecture": "A detailed description of the model's architecture, e.g., neural network layers or tree structures",
        "hyperparameters": {
            "hyperparameter_name_1": "value of hyperparameter 1",
            "hyperparameter_name_2": "value of hyperparameter 2",
            "hyperparameter_name_3": "value of hyperparameter 3"
        },
        "model_type": "Please select only **one** model type from the following four options: XGBoost, RandomForest, LightGBM, or NN. The selected model must be unique and used as the **primary model**. You may choose an auxiliary model for support or optimization on specific tasks if necessary, but the primary model must come from the provided options."

    }
    Usually, a larger model works better than a smaller one. Hence, the parameters should be larger.
  ensemble: |-
    
  workflow: |-
